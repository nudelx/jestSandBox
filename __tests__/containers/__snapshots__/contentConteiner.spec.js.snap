// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentContainer mount  should render PageContent   1`] = `
<Connect(ContentContainer)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ContentContainer
    content="test_1"
    dispatch={[Function]}
    movies={
      Object {
        "movie": "test",
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  >
    <PageContent
      content="test_1"
      movies={
        Object {
          "movie": "test",
        }
      }
    >
      <div
        className="page-content"
      >
        <EmptyCard>
          <div>
            <div
              className="movie-title"
            />
            <div
              className="movie-data-empty"
            />
          </div>
        </EmptyCard>
      </div>
    </PageContent>
  </ContentContainer>
</Connect(ContentContainer)>
`;

exports[`ContentContainer test  should render without crashing 1`] = `
<ContentContainer
  content="test_1"
  dispatch={[Function]}
  movies={
    Object {
      "movie": "test",
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;
